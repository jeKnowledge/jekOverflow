{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\API_Jek\\\\react-google-authentication\\\\src\\\\components\\\\LoginHooks.js\";\nimport React from 'react';\nimport { useGoogleLogin } from 'react-google-login'; // refresh token\n\nimport { refreshTokenSetup } from '../utils/refreshToken';\nconst clientId = '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\n\nfunction LoginHooks() {\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    alert(`Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(`Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`);\n  };\n\n  const {\n    signIn\n  } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId,\n    isSignedIn: true,\n    accessType: 'offline' // responseType: 'code',\n    // prompt: 'consent',\n\n  });\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: signIn,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/google.svg\",\n    alt: \"google login\",\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"buttonText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Sign in with Google\"));\n}\n\nexport default LoginHooks;","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/API_Jek/react-google-authentication/src/components/LoginHooks.js"],"names":["React","useGoogleLogin","refreshTokenSetup","clientId","LoginHooks","onSuccess","res","console","log","profileObj","alert","name","onFailure","signIn","isSignedIn","accessType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,MAAMC,QAAQ,GACZ,0EADF;;AAGA,SAASC,UAAT,GAAsB;AACpB,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,UAA/C;AACAC,IAAAA,KAAK,CACF,kCAAiCJ,GAAG,CAACG,UAAJ,CAAeE,IAAK,8CADnD,CAAL;AAGAT,IAAAA,iBAAiB,CAACI,GAAD,CAAjB;AACD,GAND;;AAQA,QAAMM,SAAS,GAAIN,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAI,IAAAA,KAAK,CACF,6EADE,CAAL;AAGD,GALD;;AAOA,QAAM;AAAEG,IAAAA;AAAF,MAAaZ,cAAc,CAAC;AAChCI,IAAAA,SADgC;AAEhCO,IAAAA,SAFgC;AAGhCT,IAAAA,QAHgC;AAIhCW,IAAAA,UAAU,EAAE,IAJoB;AAKhCC,IAAAA,UAAU,EAAE,SALoB,CAMhC;AACA;;AAPgC,GAAD,CAAjC;AAUA,sBACE;AAAQ,IAAA,OAAO,EAAEF,MAAjB;AAAyB,IAAA,SAAS,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAC,kBAAT;AAA4B,IAAA,GAAG,EAAC,cAAhC;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,CADF;AAOD;;AAED,eAAeT,UAAf","sourcesContent":["import React from 'react';\r\nimport { useGoogleLogin } from 'react-google-login';\r\n\r\n// refresh token\r\nimport { refreshTokenSetup } from '../utils/refreshToken';\r\n\r\nconst clientId =\r\n  '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\r\n\r\nfunction LoginHooks() {\r\n  const onSuccess = (res) => {\r\n    console.log('Login Success: currentUser:', res.profileObj);\r\n    alert(\r\n      `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\r\n    );\r\n    refreshTokenSetup(res);\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log('Login failed: res:', res);\r\n    alert(\r\n      `Failed to login. 😢 Please ping this to repo owner twitter.com/sivanesh_fiz`\r\n    );\r\n  };\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId,\r\n    isSignedIn: true,\r\n    accessType: 'offline',\r\n    // responseType: 'code',\r\n    // prompt: 'consent',\r\n  });\r\n\r\n  return (\r\n    <button onClick={signIn} className=\"button\">\r\n      <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n      <span className=\"buttonText\">Sign in with Google</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LoginHooks;\r\n"]},"metadata":{},"sourceType":"module"}