{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\API_Jek\\\\react-google-authentication\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { refreshTokenSetup } from '../utils/refreshToken';\nconst clientId = '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\n\nfunction Login() {\n  const onSuccess = res => {\n    console.log('Login Success: currentUser:', res.idToken);\n    alert(`Logged in successfully welcome ${res.profileObj.name}.`);\n    refreshTokenSetup(res);\n  }; // const signInAsyncGOOGLE = async () => {\n  //   setLoading(true);\n  //   try {\n  //     const result = await Google.logInAsync({\n  //       ClientId: clientId,\n  //       scopes: [\"profile\", \"email\"],\n  //     });      \n  //     const { type, user, idToken } = result;\n  //     if (type === \"success\") {\n  //       axios.post('http://localhost:8000', { email: user.email, token: idToken }).then((res) => {\n  //         console.log(res.data);\n  //         let { status, token, user_mail, first_name, last_name, error } = res.data;\n  //         if (error) {\n  //           setLoading(false);\n  //           setError(true)\n  //           console.log(\"something whent wrong: \", error)\n  //           return;\n  //         }\n  //         if (status === \"found\") {\n  //           setLoading(false);\n  //           login(token);\n  //         } \n  //         else {\n  //           setLoading(false);\n  //           console.log(\"user not found\"); \n  //         }        \n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         return err;\n  //       });      \n  //     } else if (type === \"cancel\") \n  //     {\n  //       console.log(\"cancelled by user\");\n  //     }\n  //   } \n  //   catch (error) {\n  //     console.error(\"error with login\", error);\n  //   }\n  //   setLoading(false);\n  // };\n  // const onSuccess = async googleData => {  const res = await fetch(\"/api/v1/auth/google\", {\n  //   method: \"POST\",\n  //   body: JSON.stringify({\n  //   token: googleData.tokenId\n  // }),\n  // headers: {\n  //   \"Content-Type\": \"application/json\"\n  // }\n  // })  \n  // console.log(googleData.tokenId);\n  // }\n\n\n  const onFailure = res => {\n    console.log('Login failed: res:', res);\n    alert(`Failed to login.`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: clientId,\n    buttonText: \"Login\",\n    onSuccess: onSuccess,\n    onFailure: onFailure,\n    cookiePolicy: 'single_host_origin',\n    style: {\n      marginTop: '100px'\n    },\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/API_Jek/react-google-authentication/src/components/Login.js"],"names":["React","GoogleLogin","refreshTokenSetup","clientId","Login","onSuccess","res","console","log","idToken","alert","profileObj","name","onFailure","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AAEA,MAAMC,QAAQ,GACZ,0EADF;;AAGA,SAASC,KAAT,GAAiB;AACf,QAAMC,SAAS,GAAIC,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAAG,CAACG,OAA/C;AACAC,IAAAA,KAAK,CACF,kCAAiCJ,GAAG,CAACK,UAAJ,CAAeC,IAAK,GADnD,CAAL;AAGAV,IAAAA,iBAAiB,CAACI,GAAD,CAAjB;AACD,GAND,CADe,CASf;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,SAAS,GAAIP,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC;AACAI,IAAAA,KAAK,CACF,kBADE,CAAL;AAGD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEP,QADZ;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAEE,SAHb;AAIE,IAAA,SAAS,EAAEQ,SAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KANT;AAOE,IAAA,UAAU,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD;;AAED,eAAeV,KAAf","sourcesContent":["import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { refreshTokenSetup } from '../utils/refreshToken';\r\n\r\nconst clientId =\r\n  '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\r\n\r\nfunction Login() {\r\n  const onSuccess = (res) => {\r\n    console.log('Login Success: currentUser:', res.idToken);\r\n    alert(\r\n      `Logged in successfully welcome ${res.profileObj.name}.`\r\n    );\r\n    refreshTokenSetup(res);\r\n  };\r\n\r\n  // const signInAsyncGOOGLE = async () => {\r\n\r\n  //   setLoading(true);\r\n\r\n  //   try {\r\n  //     const result = await Google.logInAsync({\r\n  //       ClientId: clientId,\r\n  //       scopes: [\"profile\", \"email\"],\r\n  //     });      \r\n      \r\n  //     const { type, user, idToken } = result;\r\n\r\n  //     if (type === \"success\") {\r\n  //       axios.post('http://localhost:8000', { email: user.email, token: idToken }).then((res) => {\r\n\r\n  //         console.log(res.data);\r\n          \r\n  //         let { status, token, user_mail, first_name, last_name, error } = res.data;\r\n\r\n  //         if (error) {\r\n  //           setLoading(false);\r\n  //           setError(true)\r\n  //           console.log(\"something whent wrong: \", error)\r\n  //           return;\r\n  //         }\r\n\r\n  //         if (status === \"found\") {\r\n  //           setLoading(false);\r\n  //           login(token);\r\n  //         } \r\n          \r\n  //         else {\r\n  //           setLoading(false);\r\n  //           console.log(\"user not found\"); \r\n  //         }        \r\n  //       })\r\n        \r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //         return err;\r\n  //       });      \r\n      \r\n  //     } else if (type === \"cancel\") \r\n  //     {\r\n  //       console.log(\"cancelled by user\");\r\n  //     }\r\n  //   } \r\n  //   catch (error) {\r\n  //     console.error(\"error with login\", error);\r\n  //   }\r\n  //   setLoading(false);\r\n  // };\r\n  \r\n  // const onSuccess = async googleData => {  const res = await fetch(\"/api/v1/auth/google\", {\r\n  //   method: \"POST\",\r\n  //   body: JSON.stringify({\r\n  //   token: googleData.tokenId\r\n  // }),\r\n  // headers: {\r\n  //   \"Content-Type\": \"application/json\"\r\n  // }\r\n  // })  \r\n  // console.log(googleData.tokenId);\r\n  // }\r\n\r\n  const onFailure = (res) => {\r\n    console.log('Login failed: res:', res);\r\n    alert(\r\n      `Failed to login.`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId={clientId}\r\n        buttonText=\"Login\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        cookiePolicy={'single_host_origin'}\r\n        style={{ marginTop: '100px' }}\r\n        isSignedIn={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}